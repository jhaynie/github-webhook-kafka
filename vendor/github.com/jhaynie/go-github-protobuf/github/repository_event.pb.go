// Code generated by protoc-gen-go.
// source: repository_event.proto
// DO NOT EDIT!

package github

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RepositoryEvent struct {
	Action       string      `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Repository   *Repository `protobuf:"bytes,2,opt,name=repository" json:"repository,omitempty"`
	Organization *User       `protobuf:"bytes,3,opt,name=organization" json:"organization,omitempty"`
	Sender       *User       `protobuf:"bytes,4,opt,name=sender" json:"sender,omitempty"`
}

func (m *RepositoryEvent) Reset()                    { *m = RepositoryEvent{} }
func (m *RepositoryEvent) String() string            { return proto.CompactTextString(m) }
func (*RepositoryEvent) ProtoMessage()               {}
func (*RepositoryEvent) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

func (m *RepositoryEvent) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *RepositoryEvent) GetOrganization() *User {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *RepositoryEvent) GetSender() *User {
	if m != nil {
		return m.Sender
	}
	return nil
}

func init() {
	proto.RegisterType((*RepositoryEvent)(nil), "github.RepositoryEvent")
}

func init() { proto.RegisterFile("repository_event.proto", fileDescriptor30) }

var fileDescriptor30 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x4a, 0x2d, 0xc8,
	0x2f, 0xce, 0x2c, 0xc9, 0x2f, 0xaa, 0x8c, 0x4f, 0x2d, 0x4b, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0x92, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0x82, 0x88, 0x49, 0x09, 0x20, 0xd4, 0x42, 0x44, 0x94, 0xb6, 0x32, 0x72, 0xf1, 0x07, 0xc1, 0x05,
	0x5d, 0x41, 0xfa, 0x85, 0xc4, 0xb8, 0xd8, 0x12, 0x93, 0x4b, 0x32, 0xf3, 0xf3, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0xa0, 0x3c, 0x21, 0x23, 0x2e, 0x2e, 0x84, 0x7e, 0x09, 0x26, 0xa0, 0x1c,
	0xb7, 0x91, 0x90, 0x1e, 0xc4, 0x1a, 0x3d, 0x84, 0x21, 0x41, 0x48, 0xaa, 0x84, 0x0c, 0xb8, 0x78,
	0xf2, 0x8b, 0xd2, 0x13, 0xf3, 0x32, 0xab, 0x12, 0xc1, 0x26, 0x32, 0x83, 0x75, 0xf1, 0xc0, 0x74,
	0x85, 0x02, 0xdd, 0x16, 0x84, 0xa2, 0x42, 0x48, 0x85, 0x8b, 0xad, 0x38, 0x35, 0x2f, 0x25, 0xb5,
	0x48, 0x82, 0x05, 0x8b, 0x5a, 0xa8, 0x5c, 0x12, 0x1b, 0xd8, 0xf9, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x05, 0xb0, 0xcc, 0xf2, 0xfe, 0x00, 0x00, 0x00,
}
