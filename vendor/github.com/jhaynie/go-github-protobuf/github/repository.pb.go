// Code generated by protoc-gen-go.
// source: repository.proto
// DO NOT EDIT!

package github

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RepositoryPermission struct {
	Admin bool `protobuf:"varint,1,opt,name=admin" json:"admin,omitempty"`
	Push  bool `protobuf:"varint,2,opt,name=push" json:"push,omitempty"`
	Pull  bool `protobuf:"varint,3,opt,name=pull" json:"pull,omitempty"`
}

func (m *RepositoryPermission) Reset()                    { *m = RepositoryPermission{} }
func (m *RepositoryPermission) String() string            { return proto.CompactTextString(m) }
func (*RepositoryPermission) ProtoMessage()               {}
func (*RepositoryPermission) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{0} }

type Repository struct {
	Id               int32                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Owner            *User                 `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Name             string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	FullName         string                `protobuf:"bytes,4,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	Description      string                `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Private          bool                  `protobuf:"varint,6,opt,name=private" json:"private,omitempty"`
	Fork             bool                  `protobuf:"varint,7,opt,name=fork" json:"fork,omitempty"`
	Url              string                `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	HtmlUrl          string                `protobuf:"bytes,9,opt,name=html_url,json=htmlUrl" json:"html_url,omitempty"`
	ArchiveUrl       string                `protobuf:"bytes,10,opt,name=archive_url,json=archiveUrl" json:"archive_url,omitempty"`
	AssigneesUrl     string                `protobuf:"bytes,11,opt,name=assignees_url,json=assigneesUrl" json:"assignees_url,omitempty"`
	BlobsUrl         string                `protobuf:"bytes,12,opt,name=blobs_url,json=blobsUrl" json:"blobs_url,omitempty"`
	BranchesUrl      string                `protobuf:"bytes,13,opt,name=branches_url,json=branchesUrl" json:"branches_url,omitempty"`
	CloneUrl         string                `protobuf:"bytes,14,opt,name=clone_url,json=cloneUrl" json:"clone_url,omitempty"`
	CollaboratorsUrl string                `protobuf:"bytes,15,opt,name=collaborators_url,json=collaboratorsUrl" json:"collaborators_url,omitempty"`
	CommentsUrl      string                `protobuf:"bytes,16,opt,name=comments_url,json=commentsUrl" json:"comments_url,omitempty"`
	CommitsUrl       string                `protobuf:"bytes,17,opt,name=commits_url,json=commitsUrl" json:"commits_url,omitempty"`
	CompareUrl       string                `protobuf:"bytes,18,opt,name=compare_url,json=compareUrl" json:"compare_url,omitempty"`
	ContentsUrl      string                `protobuf:"bytes,19,opt,name=contents_url,json=contentsUrl" json:"contents_url,omitempty"`
	ContributorsUrl  string                `protobuf:"bytes,20,opt,name=contributors_url,json=contributorsUrl" json:"contributors_url,omitempty"`
	DeploymentsUrl   string                `protobuf:"bytes,21,opt,name=deployments_url,json=deploymentsUrl" json:"deployments_url,omitempty"`
	DownloadsUrl     string                `protobuf:"bytes,22,opt,name=downloads_url,json=downloadsUrl" json:"downloads_url,omitempty"`
	EventsUrl        string                `protobuf:"bytes,23,opt,name=events_url,json=eventsUrl" json:"events_url,omitempty"`
	ForksUrl         string                `protobuf:"bytes,24,opt,name=forks_url,json=forksUrl" json:"forks_url,omitempty"`
	GitCommitsUrl    string                `protobuf:"bytes,25,opt,name=git_commits_url,json=gitCommitsUrl" json:"git_commits_url,omitempty"`
	GitRefsUrl       string                `protobuf:"bytes,26,opt,name=git_refs_url,json=gitRefsUrl" json:"git_refs_url,omitempty"`
	GitTagsUrl       string                `protobuf:"bytes,27,opt,name=git_tags_url,json=gitTagsUrl" json:"git_tags_url,omitempty"`
	GitUrl           string                `protobuf:"bytes,28,opt,name=git_url,json=gitUrl" json:"git_url,omitempty"`
	HooksUrl         string                `protobuf:"bytes,29,opt,name=hooks_url,json=hooksUrl" json:"hooks_url,omitempty"`
	IssueCommentUrl  string                `protobuf:"bytes,30,opt,name=issue_comment_url,json=issueCommentUrl" json:"issue_comment_url,omitempty"`
	IssueEventsUrl   string                `protobuf:"bytes,31,opt,name=issue_events_url,json=issueEventsUrl" json:"issue_events_url,omitempty"`
	IssuesUrl        string                `protobuf:"bytes,32,opt,name=issues_url,json=issuesUrl" json:"issues_url,omitempty"`
	KeysUrl          string                `protobuf:"bytes,33,opt,name=keys_url,json=keysUrl" json:"keys_url,omitempty"`
	LabelsUrl        string                `protobuf:"bytes,34,opt,name=labels_url,json=labelsUrl" json:"labels_url,omitempty"`
	LanguagesUrl     string                `protobuf:"bytes,35,opt,name=languages_url,json=languagesUrl" json:"languages_url,omitempty"`
	MergesUrl        string                `protobuf:"bytes,36,opt,name=merges_url,json=mergesUrl" json:"merges_url,omitempty"`
	MilestonesUrl    string                `protobuf:"bytes,37,opt,name=milestones_url,json=milestonesUrl" json:"milestones_url,omitempty"`
	MirrorUrl        string                `protobuf:"bytes,38,opt,name=mirror_url,json=mirrorUrl" json:"mirror_url,omitempty"`
	NotificationsUrl string                `protobuf:"bytes,39,opt,name=notifications_url,json=notificationsUrl" json:"notifications_url,omitempty"`
	PullsUrl         string                `protobuf:"bytes,40,opt,name=pulls_url,json=pullsUrl" json:"pulls_url,omitempty"`
	ReleasesUrl      string                `protobuf:"bytes,41,opt,name=releases_url,json=releasesUrl" json:"releases_url,omitempty"`
	SshUrl           string                `protobuf:"bytes,42,opt,name=ssh_url,json=sshUrl" json:"ssh_url,omitempty"`
	StargazersUrl    string                `protobuf:"bytes,43,opt,name=stargazers_url,json=stargazersUrl" json:"stargazers_url,omitempty"`
	StatusesUrl      string                `protobuf:"bytes,44,opt,name=statuses_url,json=statusesUrl" json:"statuses_url,omitempty"`
	SubscribersUrl   string                `protobuf:"bytes,45,opt,name=subscribers_url,json=subscribersUrl" json:"subscribers_url,omitempty"`
	SubscriptionUrl  string                `protobuf:"bytes,46,opt,name=subscription_url,json=subscriptionUrl" json:"subscription_url,omitempty"`
	SvnUrl           string                `protobuf:"bytes,47,opt,name=svn_url,json=svnUrl" json:"svn_url,omitempty"`
	TagsUrl          string                `protobuf:"bytes,48,opt,name=tags_url,json=tagsUrl" json:"tags_url,omitempty"`
	TeamsUrl         string                `protobuf:"bytes,49,opt,name=teams_url,json=teamsUrl" json:"teams_url,omitempty"`
	TreesUrl         string                `protobuf:"bytes,50,opt,name=trees_url,json=treesUrl" json:"trees_url,omitempty"`
	Homepage         string                `protobuf:"bytes,51,opt,name=homepage" json:"homepage,omitempty"`
	Language         string                `protobuf:"bytes,52,opt,name=language" json:"language,omitempty"`
	ForksCount       int32                 `protobuf:"varint,53,opt,name=forks_count,json=forksCount" json:"forks_count,omitempty"`
	StargazersCount  int32                 `protobuf:"varint,54,opt,name=stargazers_count,json=stargazersCount" json:"stargazers_count,omitempty"`
	WatchersCount    int32                 `protobuf:"varint,55,opt,name=watchers_count,json=watchersCount" json:"watchers_count,omitempty"`
	Size             int32                 `protobuf:"varint,56,opt,name=size" json:"size,omitempty"`
	DefaultBranch    string                `protobuf:"bytes,57,opt,name=default_branch,json=defaultBranch" json:"default_branch,omitempty"`
	OpenIssuesCount  int32                 `protobuf:"varint,58,opt,name=open_issues_count,json=openIssuesCount" json:"open_issues_count,omitempty"`
	HasIssues        bool                  `protobuf:"varint,59,opt,name=has_issues,json=hasIssues" json:"has_issues,omitempty"`
	HasWiki          bool                  `protobuf:"varint,60,opt,name=has_wiki,json=hasWiki" json:"has_wiki,omitempty"`
	HasPages         bool                  `protobuf:"varint,61,opt,name=has_pages,json=hasPages" json:"has_pages,omitempty"`
	HasDownloads     bool                  `protobuf:"varint,62,opt,name=has_downloads,json=hasDownloads" json:"has_downloads,omitempty"`
	PushedAt         string                `protobuf:"bytes,63,opt,name=pushed_at,json=pushedAt" json:"pushed_at,omitempty"`
	CreatedAt        string                `protobuf:"bytes,64,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt        string                `protobuf:"bytes,65,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	Permissions      *RepositoryPermission `protobuf:"bytes,66,opt,name=permissions" json:"permissions,omitempty"`
	SubscribersCount int32                 `protobuf:"varint,67,opt,name=subscribers_count,json=subscribersCount" json:"subscribers_count,omitempty"`
	Organization     *User                 `protobuf:"bytes,68,opt,name=organization" json:"organization,omitempty"`
	Parent           *Repository           `protobuf:"bytes,69,opt,name=parent" json:"parent,omitempty"`
	Source           *Repository           `protobuf:"bytes,70,opt,name=source" json:"source,omitempty"`
	//  application/vnd.github.polaris-preview
	AllowRebaseMerge bool `protobuf:"varint,71,opt,name=allow_rebase_merge,json=allowRebaseMerge" json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge bool `protobuf:"varint,72,opt,name=allow_squash_merge,json=allowSquashMerge" json:"allow_squash_merge,omitempty"`
	AllowMergeCommit bool `protobuf:"varint,73,opt,name=allow_merge_commit,json=allowMergeCommit" json:"allow_merge_commit,omitempty"`
}

func (m *Repository) Reset()                    { *m = Repository{} }
func (m *Repository) String() string            { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()               {}
func (*Repository) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{1} }

func (m *Repository) GetOwner() *User {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Repository) GetPermissions() *RepositoryPermission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *Repository) GetOrganization() *User {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *Repository) GetParent() *Repository {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Repository) GetSource() *Repository {
	if m != nil {
		return m.Source
	}
	return nil
}

func init() {
	proto.RegisterType((*RepositoryPermission)(nil), "github.RepositoryPermission")
	proto.RegisterType((*Repository)(nil), "github.Repository")
}

func init() { proto.RegisterFile("repository.proto", fileDescriptor29) }

var fileDescriptor29 = []byte{
	// 1122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x56, 0x69, 0x73, 0xd4, 0x36,
	0x18, 0x1e, 0x8e, 0x5c, 0xca, 0x26, 0xd9, 0x98, 0xb4, 0x88, 0x00, 0x25, 0x84, 0x02, 0xe1, 0x68,
	0x4a, 0xa1, 0xf7, 0x41, 0x0b, 0x81, 0xb6, 0x7c, 0x68, 0x87, 0xd9, 0x92, 0xe9, 0xc7, 0x1d, 0xad,
	0x57, 0xd9, 0xf5, 0xc4, 0xb6, 0x5c, 0xc9, 0xde, 0x4c, 0xf2, 0x33, 0xfb, 0x8b, 0xfa, 0x5e, 0xf2,
	0x3a, 0x2d, 0xfd, 0x66, 0x3d, 0xcf, 0xe3, 0x57, 0xaf, 0xde, 0x4b, 0x52, 0x7d, 0x6f, 0x2b, 0x17,
	0xb2, 0xda, 0xf9, 0xd3, 0xfd, 0xca, 0xbb, 0xda, 0x25, 0x8b, 0x93, 0xac, 0x9e, 0x36, 0xa3, 0x6d,
	0xd5, 0x04, 0xeb, 0x19, 0xdb, 0x7d, 0xa7, 0xb6, 0x06, 0xad, 0xee, 0xad, 0xf5, 0x45, 0x16, 0x42,
	0xe6, 0xca, 0x64, 0x4b, 0x2d, 0x98, 0x71, 0x91, 0x95, 0xfa, 0xc2, 0xce, 0x85, 0xbd, 0xe5, 0x01,
	0x2f, 0x92, 0x44, 0x5d, 0xae, 0x9a, 0x30, 0xd5, 0x17, 0x09, 0xa4, 0x6f, 0xc6, 0xf2, 0x5c, 0x5f,
	0x8a, 0x58, 0x9e, 0xef, 0xfe, 0x7d, 0x45, 0xa9, 0xb9, 0xd9, 0x64, 0x5d, 0x5d, 0xcc, 0xc6, 0x64,
	0x69, 0x61, 0x00, 0x5f, 0xc9, 0xae, 0x5a, 0x70, 0x27, 0xa5, 0xf5, 0x64, 0x67, 0xf5, 0x69, 0x6f,
	0x9f, 0x1d, 0xdb, 0x3f, 0x04, 0xbf, 0x06, 0x4c, 0xa1, 0xd9, 0xd2, 0x14, 0x96, 0xcc, 0xae, 0x0c,
	0xe8, 0x3b, 0xb9, 0xae, 0x56, 0x8e, 0xc0, 0xfc, 0x90, 0x88, 0xcb, 0x44, 0x2c, 0x23, 0xf0, 0x3b,
	0x92, 0x3b, 0x6a, 0x75, 0x6c, 0x43, 0xea, 0xb3, 0xaa, 0x86, 0x03, 0xe8, 0x05, 0xa2, 0xbb, 0x50,
	0xa2, 0xd5, 0x52, 0xe5, 0xb3, 0x99, 0xa9, 0xad, 0x5e, 0x24, 0x67, 0xe3, 0x12, 0x37, 0x3b, 0x72,
	0xfe, 0x58, 0x2f, 0xf1, 0x19, 0xf0, 0x3b, 0xe9, 0xab, 0x4b, 0x8d, 0xcf, 0xf5, 0x32, 0xd9, 0xc1,
	0xcf, 0xe4, 0x9a, 0x5a, 0x9e, 0xd6, 0x45, 0x3e, 0x44, 0x78, 0x85, 0xe0, 0x25, 0x5c, 0x1f, 0x02,
	0x75, 0x4b, 0xad, 0x1a, 0x9f, 0x4e, 0xb3, 0x99, 0x25, 0x56, 0x11, 0xab, 0x04, 0x42, 0xc1, 0x1d,
	0xb5, 0x66, 0x20, 0xb2, 0x93, 0xd2, 0xda, 0x40, 0x92, 0x55, 0x92, 0xf4, 0x5a, 0x10, 0x45, 0x70,
	0xbe, 0x51, 0xee, 0x46, 0x2c, 0xe8, 0xf1, 0xf9, 0x08, 0x40, 0xf2, 0xb6, 0xea, 0x8d, 0xbc, 0x29,
	0xd3, 0xa9, 0x18, 0x58, 0xe3, 0x03, 0x46, 0x4c, 0xfe, 0x4f, 0x73, 0x57, 0xb2, 0x0f, 0xeb, 0xfc,
	0x3f, 0x01, 0x48, 0x3e, 0x52, 0x9b, 0xa9, 0xcb, 0x73, 0x33, 0x72, 0xde, 0x40, 0x56, 0xd8, 0xc8,
	0x06, 0x89, 0xfa, 0xe7, 0x08, 0xd9, 0x2c, 0x75, 0x45, 0x61, 0xcb, 0x9a, 0x75, 0x7d, 0xde, 0x2c,
	0x62, 0x72, 0x64, 0x5c, 0x66, 0xa2, 0xd8, 0xe4, 0x23, 0x0b, 0x34, 0x17, 0x54, 0xc6, 0xb3, 0x3f,
	0x49, 0x2b, 0x40, 0xa8, 0xdd, 0xa4, 0xac, 0xdb, 0x4d, 0xae, 0xc4, 0x4d, 0x18, 0x43, 0xc9, 0x03,
	0xd5, 0xc7, 0xa5, 0xcf, 0x46, 0x4d, 0xeb, 0xf3, 0x16, 0xc9, 0x36, 0xba, 0x38, 0x4a, 0xef, 0xab,
	0x8d, 0xb1, 0xad, 0x72, 0x77, 0x3a, 0xf7, 0xfa, 0x03, 0x52, 0xae, 0x77, 0x60, 0x49, 0xc5, 0x18,
	0x6a, 0x2c, 0x77, 0x66, 0xcc, 0xb2, 0x0f, 0x39, 0x15, 0x2d, 0x88, 0xa2, 0x9b, 0x4a, 0xd9, 0x59,
	0x6b, 0xe8, 0x2a, 0x29, 0x56, 0x18, 0x91, 0x48, 0x63, 0x91, 0x30, 0xab, 0xa5, 0x12, 0x11, 0x40,
	0xf2, 0x9e, 0xda, 0x80, 0x82, 0x1e, 0x76, 0xa3, 0x73, 0x8d, 0x24, 0x6b, 0x00, 0x1f, 0xcc, 0x03,
	0xb4, 0xa3, 0x7a, 0xa8, 0xf3, 0xf6, 0x88, 0x45, 0xdb, 0x1c, 0x21, 0xc0, 0x06, 0x00, 0x75, 0x14,
	0xb5, 0x99, 0xb0, 0xe2, 0x7a, 0xab, 0x78, 0x07, 0x10, 0x2a, 0xae, 0xaa, 0x25, 0x54, 0x20, 0x79,
	0x83, 0x48, 0x6c, 0x72, 0xf1, 0x70, 0xea, 0x9c, 0x78, 0x78, 0x93, 0x3d, 0x24, 0x00, 0xc9, 0x87,
	0x6a, 0x13, 0xfa, 0xbc, 0xb1, 0x43, 0x49, 0x28, 0x89, 0x3e, 0xe2, 0xb8, 0x12, 0x71, 0xc0, 0x38,
	0x6a, 0xf7, 0x54, 0x9f, 0xb5, 0x9d, 0x78, 0xdc, 0xe2, 0xc0, 0x12, 0xfe, 0xba, 0x0d, 0x0a, 0xc4,
	0x8c, 0x10, 0xd6, 0xec, 0x70, 0xcc, 0x18, 0x39, 0xe4, 0xf6, 0x39, 0xb6, 0xa7, 0x4c, 0xde, 0xe6,
	0xf6, 0xc1, 0xb5, 0xfc, 0x09, 0xf5, 0x67, 0x73, 0x26, 0x77, 0xf9, 0x4f, 0x46, 0x24, 0x63, 0xb9,
	0x29, 0x27, 0x8d, 0x99, 0x88, 0xed, 0x3b, 0x9c, 0xb1, 0x16, 0x14, 0x1b, 0x85, 0xf5, 0x51, 0xf1,
	0x31, 0xdb, 0x60, 0x04, 0xe9, 0xbb, 0x6a, 0xbd, 0xc8, 0x72, 0x1b, 0x6a, 0x68, 0x07, 0x96, 0xdc,
	0xe5, 0x9c, 0xcc, 0xd1, 0x68, 0x25, 0xf3, 0xde, 0x79, 0x92, 0xdc, 0x13, 0x2b, 0x84, 0x48, 0x13,
	0x95, 0xae, 0xce, 0x8e, 0xb2, 0xd4, 0xe0, 0x48, 0x61, 0x43, 0xf7, 0xb9, 0x89, 0xce, 0x11, 0x92,
	0x02, 0x9c, 0x86, 0x2c, 0xda, 0xe3, 0x14, 0x10, 0x20, 0xc5, 0xef, 0x6d, 0x6e, 0x4d, 0x10, 0x6f,
	0x1e, 0x70, 0xf1, 0x47, 0x4c, 0x72, 0x1b, 0xc2, 0x94, 0xd8, 0x87, 0x9c, 0x5b, 0x58, 0xca, 0x59,
	0x42, 0x6d, 0xfc, 0xc4, 0x9c, 0x59, 0xe9, 0x89, 0x47, 0x7c, 0x96, 0x39, 0x2a, 0x5b, 0x00, 0x50,
	0x37, 0x71, 0x8b, 0xc7, 0xbc, 0x45, 0xc4, 0xa4, 0x69, 0x42, 0x33, 0xc2, 0x11, 0x39, 0x8a, 0xa6,
	0x3e, 0xe1, 0xdc, 0x76, 0x60, 0x69, 0x44, 0x41, 0x68, 0x96, 0x92, 0x72, 0x9f, 0x0b, 0xa6, 0x8b,
	0x47, 0xb7, 0x67, 0xac, 0xf8, 0x54, 0xdc, 0x9e, 0x95, 0x52, 0x00, 0x6d, 0x25, 0x3f, 0xe1, 0x02,
	0xa8, 0xa5, 0x8c, 0x21, 0x54, 0xb5, 0x35, 0x05, 0x73, 0x9f, 0x71, 0xa8, 0x08, 0x88, 0xa4, 0x8f,
	0x73, 0xf3, 0xa9, 0x90, 0x5e, 0x66, 0xe6, 0x36, 0x0c, 0x65, 0x57, 0xd8, 0x0a, 0xca, 0x40, 0x3f,
	0x8b, 0x65, 0xce, 0x6b, 0xe4, 0x62, 0x89, 0xe8, 0xcf, 0x99, 0x8b, 0x6b, 0x9c, 0x4e, 0xdc, 0xc1,
	0xa9, 0x6b, 0xca, 0x5a, 0x7f, 0x41, 0x97, 0x93, 0x22, 0xe8, 0x00, 0x11, 0x3a, 0xf1, 0x3c, 0xc8,
	0xac, 0xfa, 0x92, 0x54, 0x1b, 0x73, 0x9c, 0xa5, 0x90, 0x8f, 0x13, 0x53, 0xc3, 0x14, 0x6e, 0x85,
	0x5f, 0x91, 0x70, 0x2d, 0xa2, 0x2c, 0x83, 0x5b, 0x26, 0x64, 0x67, 0x56, 0x7f, 0x4d, 0x24, 0x7d,
	0xe3, 0xaf, 0x63, 0x7b, 0x64, 0x9a, 0xbc, 0x1e, 0xf2, 0x24, 0xd7, 0xdf, 0x70, 0x2a, 0x05, 0x7d,
	0x49, 0x20, 0x36, 0xac, 0xab, 0x6c, 0x39, 0x94, 0xfe, 0xe2, 0x4d, 0xbe, 0x65, 0x6f, 0x90, 0x78,
	0x43, 0x38, 0x6f, 0x03, 0x25, 0x3c, 0x35, 0x41, 0xa4, 0xfa, 0x3b, 0xba, 0xd2, 0x56, 0x00, 0x61,
	0x0d, 0xdd, 0x62, 0x40, 0x9f, 0x64, 0xc7, 0x99, 0xfe, 0x9e, 0xaf, 0x41, 0x58, 0xff, 0x09, 0x4b,
	0x9a, 0x19, 0x40, 0x61, 0xec, 0x82, 0xfe, 0x81, 0x38, 0xd4, 0xbe, 0xc5, 0x35, 0x36, 0x21, 0x92,
	0xed, 0x94, 0xd4, 0xcf, 0x49, 0xd0, 0x03, 0xf0, 0x55, 0xc4, 0xb8, 0xe4, 0xc3, 0xd4, 0x8e, 0x87,
	0xa6, 0xd6, 0x3f, 0xc6, 0x92, 0x47, 0xe0, 0x05, 0x39, 0x96, 0x7a, 0x0b, 0xf7, 0x2d, 0xb1, 0x3f,
	0x71, 0x6f, 0x09, 0xc2, 0x74, 0x53, 0x8d, 0x23, 0xfd, 0x82, 0x69, 0x41, 0x80, 0x7e, 0xae, 0x56,
	0xab, 0xf6, 0x7d, 0x12, 0xf4, 0x4b, 0x7a, 0x3a, 0xdc, 0x88, 0x4f, 0x87, 0xf7, 0x3d, 0x62, 0x06,
	0xdd, 0x1f, 0xb0, 0x75, 0xbb, 0xa5, 0xce, 0x21, 0x3c, 0xa0, 0x10, 0xf6, 0x3b, 0x04, 0xc7, 0xf0,
	0x89, 0xea, 0x39, 0x48, 0x71, 0x99, 0x9d, 0x51, 0x3b, 0xeb, 0x57, 0xef, 0x79, 0xa8, 0x9c, 0x53,
	0x40, 0x86, 0x16, 0xf1, 0x5e, 0x03, 0x9b, 0xaf, 0x49, 0x9b, 0xfc, 0xd7, 0xb3, 0x81, 0x28, 0x50,
	0x1b, 0x5c, 0xe3, 0x53, 0xab, 0x7f, 0xfe, 0x7f, 0x2d, 0x2b, 0x92, 0xc7, 0x2a, 0x31, 0x79, 0xee,
	0x4e, 0xe0, 0x9a, 0x18, 0xc1, 0x60, 0x18, 0xd2, 0x44, 0xd3, 0xbf, 0x50, 0xec, 0xfb, 0xc4, 0x0c,
	0x88, 0xf8, 0x0d, 0xf1, 0xb9, 0x3a, 0xfc, 0xd5, 0x18, 0x98, 0x1d, 0xac, 0xfe, 0xb5, 0xa3, 0xfe,
	0x83, 0x88, 0x7f, 0xa9, 0x49, 0x26, 0x17, 0x96, 0x7e, 0xd3, 0x51, 0x93, 0x8e, 0xaf, 0xac, 0xd1,
	0x22, 0xbd, 0x18, 0x9f, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x11, 0x08, 0x6f, 0x59, 0x0a,
	0x00, 0x00,
}
