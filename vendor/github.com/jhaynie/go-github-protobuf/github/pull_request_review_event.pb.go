// Code generated by protoc-gen-go.
// source: pull_request_review_event.proto
// DO NOT EDIT!

package github

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PullRequestReviewLink struct {
	Html string `protobuf:"bytes,1,opt,name=html" json:"html,omitempty"`
}

func (m *PullRequestReviewLink) Reset()                    { *m = PullRequestReviewLink{} }
func (m *PullRequestReviewLink) String() string            { return proto.CompactTextString(m) }
func (*PullRequestReviewLink) ProtoMessage()               {}
func (*PullRequestReviewLink) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

type PullRequestReviewLinks struct {
	Html        *PullRequestReviewLink `protobuf:"bytes,1,opt,name=html" json:"html,omitempty"`
	PullRequest *PullRequestReviewLink `protobuf:"bytes,2,opt,name=pull_request,json=pullRequest" json:"pull_request,omitempty"`
}

func (m *PullRequestReviewLinks) Reset()                    { *m = PullRequestReviewLinks{} }
func (m *PullRequestReviewLinks) String() string            { return proto.CompactTextString(m) }
func (*PullRequestReviewLinks) ProtoMessage()               {}
func (*PullRequestReviewLinks) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{1} }

func (m *PullRequestReviewLinks) GetHtml() *PullRequestReviewLink {
	if m != nil {
		return m.Html
	}
	return nil
}

func (m *PullRequestReviewLinks) GetPullRequest() *PullRequestReviewLink {
	if m != nil {
		return m.PullRequest
	}
	return nil
}

type PullRequestReview struct {
	Id             int32                   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	User           *User                   `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Body           string                  `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	SubmittedAt    string                  `protobuf:"bytes,4,opt,name=submitted_at,json=submittedAt" json:"submitted_at,omitempty"`
	State          string                  `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	HtmlUrl        string                  `protobuf:"bytes,6,opt,name=html_url,json=htmlUrl" json:"html_url,omitempty"`
	PullRequestUrl string                  `protobuf:"bytes,7,opt,name=pull_request_url,json=pullRequestUrl" json:"pull_request_url,omitempty"`
	XLinks         *PullRequestReviewLinks `protobuf:"bytes,8,opt,name=_links,json=Links" json:"_links,omitempty"`
}

func (m *PullRequestReview) Reset()                    { *m = PullRequestReview{} }
func (m *PullRequestReview) String() string            { return proto.CompactTextString(m) }
func (*PullRequestReview) ProtoMessage()               {}
func (*PullRequestReview) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{2} }

func (m *PullRequestReview) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *PullRequestReview) GetXLinks() *PullRequestReviewLinks {
	if m != nil {
		return m.XLinks
	}
	return nil
}

type PullRequestReviewEvent struct {
	Action      string             `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Review      *PullRequestReview `protobuf:"bytes,2,opt,name=review" json:"review,omitempty"`
	PullRequest *PullRequest       `protobuf:"bytes,3,opt,name=pull_request,json=pullRequest" json:"pull_request,omitempty"`
	Repository  *Repository        `protobuf:"bytes,4,opt,name=repository" json:"repository,omitempty"`
	Sender      *User              `protobuf:"bytes,5,opt,name=sender" json:"sender,omitempty"`
}

func (m *PullRequestReviewEvent) Reset()                    { *m = PullRequestReviewEvent{} }
func (m *PullRequestReviewEvent) String() string            { return proto.CompactTextString(m) }
func (*PullRequestReviewEvent) ProtoMessage()               {}
func (*PullRequestReviewEvent) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{3} }

func (m *PullRequestReviewEvent) GetReview() *PullRequestReview {
	if m != nil {
		return m.Review
	}
	return nil
}

func (m *PullRequestReviewEvent) GetPullRequest() *PullRequest {
	if m != nil {
		return m.PullRequest
	}
	return nil
}

func (m *PullRequestReviewEvent) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *PullRequestReviewEvent) GetSender() *User {
	if m != nil {
		return m.Sender
	}
	return nil
}

func init() {
	proto.RegisterType((*PullRequestReviewLink)(nil), "github.PullRequestReviewLink")
	proto.RegisterType((*PullRequestReviewLinks)(nil), "github.PullRequestReviewLinks")
	proto.RegisterType((*PullRequestReview)(nil), "github.PullRequestReview")
	proto.RegisterType((*PullRequestReviewEvent)(nil), "github.PullRequestReviewEvent")
}

func init() { proto.RegisterFile("pull_request_review_event.proto", fileDescriptor24) }

var fileDescriptor24 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0x0d, 0x1f, 0x2d, 0xbc, 0x5b, 0x42, 0xe0, 0xbe, 0xf7, 0x48, 0x21, 0x51, 0xb1, 0x71, 0x41,
	0x62, 0x42, 0x22, 0x46, 0xd7, 0xba, 0x70, 0xe7, 0xc2, 0x4c, 0xc2, 0xba, 0xa1, 0x76, 0x22, 0x8d,
	0xa5, 0xad, 0x33, 0x53, 0x0c, 0x3f, 0x42, 0xff, 0xad, 0x7b, 0x3b, 0x1f, 0x40, 0xd5, 0x6a, 0x5c,
	0x75, 0xe6, 0x9c, 0x73, 0x4f, 0xe7, 0xde, 0x73, 0xe1, 0x28, 0xcb, 0xe3, 0xd8, 0x67, 0xf4, 0x29,
	0xa7, 0x5c, 0x14, 0xdf, 0x75, 0x44, 0x9f, 0x7d, 0xba, 0xa6, 0x89, 0x98, 0x66, 0x2c, 0x15, 0x29,
	0xda, 0x0f, 0x91, 0x58, 0xe6, 0xc1, 0x08, 0x72, 0x4e, 0x99, 0xc6, 0x46, 0x3d, 0x46, 0xb3, 0x94,
	0x47, 0x22, 0x65, 0x1b, 0x83, 0xf4, 0xa5, 0x8d, 0x71, 0xd1, 0x90, 0x77, 0x0a, 0xff, 0xef, 0x0a,
	0x90, 0x68, 0x90, 0x28, 0xe7, 0xdb, 0x28, 0x79, 0x44, 0x84, 0xe6, 0x52, 0xac, 0x62, 0xb7, 0x36,
	0xae, 0x4d, 0xfe, 0x10, 0x75, 0xf6, 0x5e, 0x6a, 0x30, 0xa8, 0x54, 0x73, 0x3c, 0x2b, 0xc9, 0x9d,
	0xd9, 0xc1, 0x54, 0xbf, 0x67, 0x5a, 0xa9, 0xd6, 0x6e, 0x78, 0x05, 0x9d, 0x72, 0x5b, 0x6e, 0xfd,
	0x37, 0xa5, 0x4e, 0xb6, 0x87, 0xbd, 0xd7, 0x3a, 0xf4, 0xbf, 0xc8, 0xb0, 0x0b, 0xf5, 0x28, 0x54,
	0x0f, 0xb1, 0x48, 0x71, 0xc2, 0x31, 0x34, 0xe5, 0x54, 0x8c, 0x7f, 0x67, 0xeb, 0x3f, 0x2f, 0x30,
	0xa2, 0x18, 0xd9, 0x6b, 0x90, 0x86, 0x1b, 0xb7, 0xa1, 0x7b, 0x95, 0x67, 0x3c, 0x86, 0x0e, 0xcf,
	0x83, 0x55, 0x24, 0x04, 0x0d, 0xfd, 0x85, 0x70, 0x9b, 0x8a, 0x73, 0x76, 0xd8, 0xb5, 0xc0, 0x7f,
	0x60, 0x71, 0xb1, 0x10, 0xd4, 0xb5, 0x14, 0xa7, 0x2f, 0x38, 0x84, 0xb6, 0x6c, 0xcf, 0xcf, 0x59,
	0xec, 0xda, 0x8a, 0x68, 0xc9, 0xfb, 0x9c, 0xc5, 0x38, 0x81, 0xde, 0x87, 0x20, 0xa5, 0xa4, 0xa5,
	0x24, 0xdd, 0x52, 0x5b, 0x52, 0x79, 0x01, 0xb6, 0x1f, 0xcb, 0xc1, 0xba, 0x6d, 0xf5, 0xea, 0xc3,
	0x1f, 0xa7, 0xc2, 0x89, 0xa5, 0x3e, 0xde, 0x5b, 0x55, 0x40, 0x37, 0x72, 0x4f, 0x70, 0x00, 0xf6,
	0xe2, 0x5e, 0x44, 0x69, 0x62, 0x12, 0x35, 0xb7, 0x22, 0x38, 0x5b, 0xef, 0x93, 0x99, 0xcf, 0xf0,
	0xdb, 0x3f, 0x11, 0x23, 0xc4, 0xcb, 0x4f, 0xc1, 0x35, 0x54, 0xe1, 0xdf, 0xaa, 0xc2, 0x72, 0x5c,
	0x38, 0x03, 0xd8, 0xaf, 0xa4, 0x1a, 0xa8, 0x33, 0xc3, 0x6d, 0x15, 0xd9, 0x31, 0xa4, 0xa4, 0xc2,
	0x13, 0xb0, 0x39, 0x4d, 0xc2, 0x22, 0x3e, 0xab, 0x22, 0x3e, 0xc3, 0x05, 0xb6, 0x5a, 0xe6, 0xf3,
	0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x11, 0x8a, 0x4c, 0x28, 0x03, 0x00, 0x00,
}
