// Code generated by protoc-gen-go.
// source: download_event.proto
// DO NOT EDIT!

package github

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Download struct {
	Url           string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	HtmlUrl       string `protobuf:"bytes,2,opt,name=html_url,json=htmlUrl" json:"html_url,omitempty"`
	Id            int32  `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Description   string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Size          int32  `protobuf:"varint,6,opt,name=size" json:"size,omitempty"`
	DownloadCount int32  `protobuf:"varint,7,opt,name=download_count,json=downloadCount" json:"download_count,omitempty"`
	ContentType   string `protobuf:"bytes,8,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
}

func (m *Download) Reset()                    { *m = Download{} }
func (m *Download) String() string            { return proto.CompactTextString(m) }
func (*Download) ProtoMessage()               {}
func (*Download) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type DownloadEvent struct {
	Download *Download `protobuf:"bytes,1,opt,name=download" json:"download,omitempty"`
}

func (m *DownloadEvent) Reset()                    { *m = DownloadEvent{} }
func (m *DownloadEvent) String() string            { return proto.CompactTextString(m) }
func (*DownloadEvent) ProtoMessage()               {}
func (*DownloadEvent) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *DownloadEvent) GetDownload() *Download {
	if m != nil {
		return m.Download
	}
	return nil
}

func init() {
	proto.RegisterType((*Download)(nil), "github.Download")
	proto.RegisterType((*DownloadEvent)(nil), "github.DownloadEvent")
}

func init() { proto.RegisterFile("download_event.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x90, 0xcd, 0x4e, 0xc3, 0x30,
	0x10, 0x84, 0x95, 0xfe, 0xa4, 0x66, 0x4b, 0xab, 0x6a, 0xc5, 0xc1, 0xdc, 0x4a, 0x25, 0x24, 0x0e,
	0x28, 0x07, 0x38, 0x73, 0x02, 0x5e, 0x20, 0x82, 0x73, 0xd4, 0xc6, 0x16, 0xb5, 0x94, 0xd8, 0x51,
	0xb2, 0x01, 0xc1, 0xab, 0xf2, 0x32, 0xd8, 0x9b, 0x38, 0xe2, 0x36, 0xf9, 0x66, 0x32, 0xf2, 0x2c,
	0x5c, 0x29, 0xf7, 0x65, 0x2b, 0x77, 0x54, 0x85, 0xfe, 0xd4, 0x96, 0xb2, 0xa6, 0x75, 0xe4, 0x30,
	0xfd, 0x30, 0x74, 0xee, 0x4f, 0x87, 0xdf, 0x04, 0xc4, 0xcb, 0x18, 0xc0, 0x1d, 0xcc, 0xfb, 0xb6,
	0x92, 0xc9, 0x3e, 0xb9, 0xbb, 0xc8, 0x83, 0xc4, 0x6b, 0x10, 0x67, 0xaa, 0xab, 0x22, 0xe0, 0x19,
	0xe3, 0x55, 0xf8, 0x7e, 0xf7, 0xd6, 0x16, 0x66, 0x46, 0xc9, 0xb9, 0x87, 0xcb, 0xdc, 0x2b, 0x44,
	0x58, 0xd8, 0x63, 0xad, 0xe5, 0x82, 0x63, 0xac, 0x71, 0x0f, 0x6b, 0xa5, 0xbb, 0xb2, 0x35, 0x0d,
	0x19, 0x67, 0xe5, 0x92, 0xad, 0xff, 0x28, 0xfc, 0xd5, 0x99, 0x1f, 0x2d, 0x53, 0xee, 0x61, 0x8d,
	0xb7, 0xb0, 0x9d, 0xde, 0x5c, 0xba, 0xde, 0x92, 0x5c, 0xb1, 0xbb, 0x89, 0xf4, 0x39, 0x40, 0xbc,
	0x81, 0xcb, 0xd2, 0x59, 0xf2, 0x9b, 0x0a, 0xfa, 0x6e, 0xb4, 0x14, 0x43, 0xfb, 0xc8, 0xde, 0x3c,
	0x3a, 0x3c, 0xc1, 0x26, 0x8e, 0x7b, 0x0d, 0xe3, 0xf1, 0x1e, 0x44, 0x2c, 0xe1, 0x99, 0xeb, 0x87,
	0x5d, 0x36, 0x5c, 0x22, 0x8b, 0xc1, 0x7c, 0x4a, 0x9c, 0x52, 0xbe, 0xd5, 0xe3, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x9f, 0x41, 0x83, 0x8e, 0x43, 0x01, 0x00, 0x00,
}
